using Sys_Sols_Inventory.Model;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;

namespace Sys_Sols_Inventory.Class
{
    class Salesman_Report
    {
        //SqlConnection conn = new SqlConnection(Properties.Settings.Default.ConnectionStrings);
        //SqlCommand cmd = new SqlCommand();
        //SqlDataAdapter adapter = new SqlDataAdapter();
        public String Saleman { get; set; }
        public DateTime Date1 { get; set; }
        public DateTime Date2 { get; set; }

        private string query;

        public DataTable Report_All()
        {
            query = @"SELECT        INV_SALES_HDR.DOC_ID AS INVOICENO, INV_SALES_HDR.DOC_NO AS Docno, INV_SALES_HDR.DOC_DATE_GRE AS Date, 
                         INV_SALES_DTL.ITEM_CODE AS Itemcode, SUM(INV_SALES_DTL.QUANTITY) * - 1 AS Quantity, SUM(INV_SALES_DTL.GROSS_TOTAL) * - 1 AS GrossTotal, 
                         SUM(INV_SALES_DTL.ITEM_TOTAL) * - 1 AS ItemTotal, SUM(INV_SALES_DTL.ITEM_DISCOUNT) * - 1 AS Discount, INV_SALES_DTL.ITEM_DESC_ENG, 
                         INV_ITEM_DIRECTORY.TYPE, INV_ITEM_TYPE.DESC_ENG AS TypeName, INV_ITEM_CATEGORY.DESC_ENG AS Categoryname, 
                         INV_ITEM_TM.DESC_ENG AS TMname, INV_ITEM_GROUP.DESC_ENG AS Groupname, INV_SALES_HDR.DOC_TYPE, INV_SALES_DTL.UOM, 
                         INV_SALES_DTL.GROSS_TOTAL * - 1 AS GROSS_TOTAL, INV_ITEM_DIRECTORY.[GROUP], INV_ITEM_DIRECTORY.CATEGORY, INV_ITEM_DIRECTORY.TRADEMARK, 
                         INV_UNIT.DESC_ENG AS Unitname, INV_SALES_HDR.CUSTOMER_CODE, SYS_DOC_TYPE.DESC_ENG AS DocumentType, 
                         INV_SALES_HDR.CUSTOMER_NAME_ENG AS Customer, INV_SALES_DTL.ITEM_TAX * - 1 AS TaxTotal,CASE WHEN ROW_NUMBER() OVER(PARTITION BY INV_SALES_HDR.DOC_NO ORDER  BY INV_SALES_DTL.ITEM_DESC_ENG)=1 THEN  INV_SALES_HDR.DISCOUNT*-1  ELSE 0 END AS TotalDiscount,EMP_EMPLOYEES.Emp_Fname As SalesMan
FROM            INV_SALES_HDR LEFT OUTER JOIN
                         INV_SALES_DTL ON INV_SALES_HDR.DOC_NO = INV_SALES_DTL.DOC_NO LEFT OUTER JOIN
                         INV_ITEM_DIRECTORY ON INV_SALES_DTL.ITEM_CODE = INV_ITEM_DIRECTORY.CODE LEFT OUTER JOIN
                         INV_ITEM_TYPE ON INV_ITEM_DIRECTORY.TYPE = INV_ITEM_TYPE.CODE LEFT OUTER JOIN
                         INV_ITEM_CATEGORY ON INV_ITEM_DIRECTORY.CATEGORY = INV_ITEM_CATEGORY.CODE LEFT OUTER JOIN
                         INV_ITEM_TM ON INV_ITEM_TM.CODE = INV_ITEM_DIRECTORY.TRADEMARK LEFT OUTER JOIN
                         INV_UNIT ON INV_SALES_DTL.UOM = INV_UNIT.CODE LEFT OUTER JOIN
                         INV_ITEM_GROUP ON INV_ITEM_DIRECTORY.[GROUP] = INV_ITEM_GROUP.CODE LEFT OUTER JOIN
                         SYS_DOC_TYPE ON SYS_DOC_TYPE.CODE = INV_SALES_HDR.DOC_TYPE LEFT OUTER JOIN EMP_EMPLOYEES ON INV_SALES_HDR.SALESMAN_CODE=EMP_EMPLOYEES.EMPID
WHERE         (EMP_EMPLOYEES.Emp_Fname LIKE @SMan) AND (INV_SALES_HDR.DOC_TYPE = 'SAL.CSR') AND (INV_SALES_HDR.FLAGDEL = 'True')
GROUP BY INV_SALES_HDR.DOC_ID, INV_SALES_HDR.DOC_DATE_GRE, INV_SALES_DTL.ITEM_CODE, INV_SALES_DTL.ITEM_DESC_ENG, INV_ITEM_DIRECTORY.TYPE, 
                         INV_SALES_DTL.ITEM_TAX, INV_ITEM_TYPE.DESC_ENG, INV_ITEM_CATEGORY.DESC_ENG, INV_ITEM_TM.DESC_ENG, INV_ITEM_GROUP.DESC_ENG, 
                         INV_SALES_HDR.DOC_TYPE, INV_SALES_DTL.UOM, INV_SALES_DTL.GROSS_TOTAL, INV_ITEM_DIRECTORY.[GROUP], INV_ITEM_DIRECTORY.CATEGORY, 
                         INV_ITEM_DIRECTORY.TRADEMARK, INV_UNIT.DESC_ENG, INV_SALES_HDR.CUSTOMER_CODE, SYS_DOC_TYPE.DESC_ENG, INV_SALES_HDR.DOC_NO, 
                         INV_SALES_HDR.CUSTOMER_NAME_ENG, INV_SALES_HDR.DISCOUNT,EMP_EMPLOYEES.Emp_Fname
						 UNION ALL
						 SELECT        INV_SALES_HDR_3.DOC_ID AS INVOICENO, INV_SALES_HDR_3.DOC_NO AS Docno, INV_SALES_HDR_3.DOC_DATE_GRE AS Date, 
                         INV_SALES_DTL_3.ITEM_CODE AS Itemcode, SUM(INV_SALES_DTL_3.QUANTITY) AS Quantity, SUM(INV_SALES_DTL_3.GROSS_TOTAL) AS GrossTotal, 
                         SUM(INV_SALES_DTL_3.ITEM_TOTAL) AS ItemTotal, SUM(INV_SALES_DTL_3.ITEM_DISCOUNT) AS Discount, INV_SALES_DTL_3.ITEM_DESC_ENG, 
                         INV_ITEM_DIRECTORY_3.TYPE, INV_ITEM_TYPE_3.DESC_ENG AS TypeName, INV_ITEM_CATEGORY_3.DESC_ENG AS Categoryname, 
                         INV_ITEM_TM_3.DESC_ENG AS TMname, INV_ITEM_GROUP_3.DESC_ENG AS Groupname, INV_SALES_HDR_3.DOC_TYPE, INV_SALES_DTL_3.UOM, 
                         INV_SALES_DTL_3.GROSS_TOTAL, INV_ITEM_DIRECTORY_3.[GROUP], INV_ITEM_DIRECTORY_3.CATEGORY, INV_ITEM_DIRECTORY_3.TRADEMARK, 
                         INV_UNIT_3.DESC_ENG AS Unitname, INV_SALES_HDR_3.CUSTOMER_CODE, SYS_DOC_TYPE_3.DESC_ENG AS DocumentType, 
                         INV_SALES_HDR_3.CUSTOMER_NAME_ENG AS Customer, INV_SALES_DTL_3.ITEM_TAX AS TaxTotal, CASE WHEN ROW_NUMBER() OVER(PARTITION BY INV_SALES_HDR_3.DOC_NO ORDER  BY INV_SALES_DTL_3.ITEM_DESC_ENG)=1 THEN  INV_SALES_HDR_3.DISCOUNT  ELSE 0 END AS TotalDiscount,EMP_EMPLOYEES.Emp_Fname As SalesMan
FROM            INV_SALES_HDR AS INV_SALES_HDR_3 LEFT OUTER JOIN
                         INV_SALES_DTL AS INV_SALES_DTL_3 ON INV_SALES_HDR_3.DOC_NO = INV_SALES_DTL_3.DOC_NO LEFT OUTER JOIN
                         INV_ITEM_DIRECTORY AS INV_ITEM_DIRECTORY_3 ON INV_SALES_DTL_3.ITEM_CODE = INV_ITEM_DIRECTORY_3.CODE LEFT OUTER JOIN
                         INV_ITEM_TYPE AS INV_ITEM_TYPE_3 ON INV_ITEM_DIRECTORY_3.TYPE = INV_ITEM_TYPE_3.CODE LEFT OUTER JOIN
                         INV_ITEM_CATEGORY AS INV_ITEM_CATEGORY_3 ON INV_ITEM_DIRECTORY_3.CATEGORY = INV_ITEM_CATEGORY_3.CODE LEFT OUTER JOIN
                         INV_ITEM_TM AS INV_ITEM_TM_3 ON INV_ITEM_TM_3.CODE = INV_ITEM_DIRECTORY_3.TRADEMARK LEFT OUTER JOIN
                         INV_UNIT AS INV_UNIT_3 ON INV_SALES_DTL_3.UOM = INV_UNIT_3.CODE LEFT OUTER JOIN
                         INV_ITEM_GROUP AS INV_ITEM_GROUP_3 ON INV_ITEM_DIRECTORY_3.[GROUP] = INV_ITEM_GROUP_3.CODE LEFT OUTER JOIN
                         SYS_DOC_TYPE AS SYS_DOC_TYPE_3 ON SYS_DOC_TYPE_3.CODE = INV_SALES_HDR_3.DOC_TYPE LEFT OUTER JOIN EMP_EMPLOYEES ON INV_SALES_HDR_3.SALESMAN_CODE=EMP_EMPLOYEES.EMPID
WHERE         (EMP_EMPLOYEES.Emp_Fname LIKE @SMan) AND (INV_SALES_HDR_3.DOC_TYPE = 'SAL.CRD') AND (INV_SALES_HDR_3.FLAGDEL = 'True')
GROUP BY INV_SALES_HDR_3.DOC_ID, INV_SALES_HDR_3.DOC_DATE_GRE, INV_SALES_DTL_3.ITEM_CODE, INV_SALES_DTL_3.ITEM_DESC_ENG, 
                         INV_ITEM_DIRECTORY_3.TYPE, INV_SALES_DTL_3.ITEM_TAX, INV_ITEM_TYPE_3.DESC_ENG, INV_ITEM_CATEGORY_3.DESC_ENG, INV_ITEM_TM_3.DESC_ENG, 
                         INV_ITEM_GROUP_3.DESC_ENG, INV_SALES_HDR_3.DOC_TYPE, INV_SALES_DTL_3.UOM, INV_SALES_DTL_3.GROSS_TOTAL, INV_ITEM_DIRECTORY_3.[GROUP], 
                         INV_ITEM_DIRECTORY_3.CATEGORY, INV_ITEM_DIRECTORY_3.TRADEMARK, INV_UNIT_3.DESC_ENG, INV_SALES_HDR_3.CUSTOMER_CODE, 
                         SYS_DOC_TYPE_3.DESC_ENG, INV_SALES_HDR_3.DOC_NO, INV_SALES_HDR_3.CUSTOMER_NAME_ENG, INV_SALES_HDR_3.DISCOUNT,EMP_EMPLOYEES.Emp_Fname
						 UNION ALL
						 SELECT        INV_SALES_HDR_2.DOC_ID AS INVOICENO, INV_SALES_HDR_2.DOC_NO AS Docno, INV_SALES_HDR_2.DOC_DATE_GRE AS Date, 
                         INV_SALES_DTL_2.ITEM_CODE AS Itemcode, SUM(INV_SALES_DTL_2.QUANTITY) AS Quantity, SUM(INV_SALES_DTL_2.GROSS_TOTAL) AS GrossTotal, 
                         SUM(INV_SALES_DTL_2.ITEM_TOTAL) AS ItemTotal, SUM(INV_SALES_DTL_2.ITEM_DISCOUNT) AS Discount, INV_SALES_DTL_2.ITEM_DESC_ENG, 
                         INV_ITEM_DIRECTORY_2.TYPE, INV_ITEM_TYPE_2.DESC_ENG AS TypeName, INV_ITEM_CATEGORY_2.DESC_ENG AS Categoryname, 
                         INV_ITEM_TM_2.DESC_ENG AS TMname, INV_ITEM_GROUP_2.DESC_ENG AS Groupname, INV_SALES_HDR_2.DOC_TYPE, INV_SALES_DTL_2.UOM, 
                         INV_SALES_DTL_2.GROSS_TOTAL, INV_ITEM_DIRECTORY_2.[GROUP], INV_ITEM_DIRECTORY_2.CATEGORY, INV_ITEM_DIRECTORY_2.TRADEMARK, 
                         INV_UNIT_2.DESC_ENG AS Unitname, INV_SALES_HDR_2.CUSTOMER_CODE, SYS_DOC_TYPE_2.DESC_ENG AS DocumentType, 
                         INV_SALES_HDR_2.CUSTOMER_NAME_ENG AS Customer, INV_SALES_DTL_2.ITEM_TAX AS TaxTotal, CASE WHEN ROW_NUMBER() OVER(PARTITION BY INV_SALES_HDR_2.DOC_NO ORDER  BY INV_SALES_DTL_2.ITEM_DESC_ENG)=1 THEN  INV_SALES_HDR_2.DISCOUNT  ELSE 0 END AS TotalDiscount,EMP_EMPLOYEES.Emp_Fname As SalesMan
FROM            INV_SALES_HDR AS INV_SALES_HDR_2 LEFT OUTER JOIN
                         INV_SALES_DTL AS INV_SALES_DTL_2 ON INV_SALES_HDR_2.DOC_NO = INV_SALES_DTL_2.DOC_NO LEFT OUTER JOIN
                         INV_ITEM_DIRECTORY AS INV_ITEM_DIRECTORY_2 ON INV_SALES_DTL_2.ITEM_CODE = INV_ITEM_DIRECTORY_2.CODE LEFT OUTER JOIN
                         INV_ITEM_TYPE AS INV_ITEM_TYPE_2 ON INV_ITEM_DIRECTORY_2.TYPE = INV_ITEM_TYPE_2.CODE LEFT OUTER JOIN
                         INV_ITEM_CATEGORY AS INV_ITEM_CATEGORY_2 ON INV_ITEM_DIRECTORY_2.CATEGORY = INV_ITEM_CATEGORY_2.CODE LEFT OUTER JOIN
                         INV_ITEM_TM AS INV_ITEM_TM_2 ON INV_ITEM_TM_2.CODE = INV_ITEM_DIRECTORY_2.TRADEMARK LEFT OUTER JOIN
                         INV_UNIT AS INV_UNIT_2 ON INV_SALES_DTL_2.UOM = INV_UNIT_2.CODE LEFT OUTER JOIN
                         INV_ITEM_GROUP AS INV_ITEM_GROUP_2 ON INV_ITEM_DIRECTORY_2.[GROUP] = INV_ITEM_GROUP_2.CODE LEFT OUTER JOIN
                         SYS_DOC_TYPE AS SYS_DOC_TYPE_2 ON SYS_DOC_TYPE_2.CODE = INV_SALES_HDR_2.DOC_TYPE LEFT OUTER JOIN EMP_EMPLOYEES ON INV_SALES_HDR_2.SALESMAN_CODE=EMP_EMPLOYEES.EMPID
WHERE         (EMP_EMPLOYEES.Emp_Fname LIKE @SMan) AND (INV_SALES_HDR_2.DOC_TYPE = 'SAL.CSS') AND (INV_SALES_HDR_2.FLAGDEL = 'True')
GROUP BY INV_SALES_HDR_2.DOC_ID, INV_SALES_HDR_2.DOC_DATE_GRE, INV_SALES_DTL_2.ITEM_CODE, INV_SALES_DTL_2.ITEM_DESC_ENG, 
                         INV_ITEM_DIRECTORY_2.TYPE, INV_SALES_DTL_2.ITEM_TAX, INV_ITEM_TYPE_2.DESC_ENG, INV_ITEM_CATEGORY_2.DESC_ENG, INV_ITEM_TM_2.DESC_ENG, 
                         INV_ITEM_GROUP_2.DESC_ENG, INV_SALES_HDR_2.DOC_TYPE, INV_SALES_DTL_2.UOM, INV_SALES_DTL_2.GROSS_TOTAL, INV_ITEM_DIRECTORY_2.[GROUP], 
                         INV_ITEM_DIRECTORY_2.CATEGORY, INV_ITEM_DIRECTORY_2.TRADEMARK, INV_UNIT_2.DESC_ENG, INV_SALES_HDR_2.CUSTOMER_CODE, 
                         SYS_DOC_TYPE_2.DESC_ENG, INV_SALES_HDR_2.DOC_NO, INV_SALES_HDR_2.CUSTOMER_NAME_ENG, INV_SALES_HDR_2.DISCOUNT,EMP_EMPLOYEES.Emp_Fname
						 UNION ALL
						 SELECT        INV_SALES_HDR_1.DOC_ID AS INVOICENO, INV_SALES_HDR_1.DOC_NO AS Docno, INV_SALES_HDR_1.DOC_DATE_GRE AS Date, 
                         INV_SALES_DTL_1.ITEM_CODE AS Itemcode, SUM(INV_SALES_DTL_1.QUANTITY) * - 1 AS Quantity, SUM(INV_SALES_DTL_1.GROSS_TOTAL) * - 1 AS GrossTotal, 
                         SUM(INV_SALES_DTL_1.ITEM_TOTAL) * - 1 AS ItemTotal, SUM(INV_SALES_DTL_1.ITEM_DISCOUNT) * - 1 AS Discount, INV_SALES_DTL_1.ITEM_DESC_ENG, 
                         INV_ITEM_DIRECTORY_1.TYPE, INV_ITEM_TYPE_1.DESC_ENG AS TypeName, INV_ITEM_CATEGORY_1.DESC_ENG AS Categoryname, 
                         INV_ITEM_TM_1.DESC_ENG AS TMname, INV_ITEM_GROUP_1.DESC_ENG AS Groupname, INV_SALES_HDR_1.DOC_TYPE, INV_SALES_DTL_1.UOM, 
                         INV_SALES_DTL_1.GROSS_TOTAL * - 1 AS GROSS_TOTAL, INV_ITEM_DIRECTORY_1.[GROUP], INV_ITEM_DIRECTORY_1.CATEGORY, 
                         INV_ITEM_DIRECTORY_1.TRADEMARK, INV_UNIT_1.DESC_ENG AS Unitname, INV_SALES_HDR_1.CUSTOMER_CODE, 
                         SYS_DOC_TYPE_1.DESC_ENG AS DocumentType, INV_SALES_HDR_1.CUSTOMER_NAME_ENG AS Customer, INV_SALES_DTL_1.ITEM_TAX * - 1 AS TaxTotal, 
                         CASE WHEN ROW_NUMBER() OVER(PARTITION BY INV_SALES_HDR_1.DOC_NO ORDER  BY INV_SALES_DTL_1.ITEM_DESC_ENG)=1 THEN  INV_SALES_HDR_1.DISCOUNT*-1  ELSE 0 END AS TotalDiscount,EMP_EMPLOYEES.Emp_Fname As SalesMan
FROM            INV_SALES_HDR AS INV_SALES_HDR_1 LEFT OUTER JOIN
                         INV_SALES_DTL AS INV_SALES_DTL_1 ON INV_SALES_HDR_1.DOC_NO = INV_SALES_DTL_1.DOC_NO LEFT OUTER JOIN
                         INV_ITEM_DIRECTORY AS INV_ITEM_DIRECTORY_1 ON INV_SALES_DTL_1.ITEM_CODE = INV_ITEM_DIRECTORY_1.CODE LEFT OUTER JOIN
                         INV_ITEM_TYPE AS INV_ITEM_TYPE_1 ON INV_ITEM_DIRECTORY_1.TYPE = INV_ITEM_TYPE_1.CODE LEFT OUTER JOIN
                         INV_ITEM_CATEGORY AS INV_ITEM_CATEGORY_1 ON INV_ITEM_DIRECTORY_1.CATEGORY = INV_ITEM_CATEGORY_1.CODE LEFT OUTER JOIN
                         INV_ITEM_TM AS INV_ITEM_TM_1 ON INV_ITEM_TM_1.CODE = INV_ITEM_DIRECTORY_1.TRADEMARK LEFT OUTER JOIN
                         INV_UNIT AS INV_UNIT_1 ON INV_SALES_DTL_1.UOM = INV_UNIT_1.CODE LEFT OUTER JOIN
                         INV_ITEM_GROUP AS INV_ITEM_GROUP_1 ON INV_ITEM_DIRECTORY_1.[GROUP] = INV_ITEM_GROUP_1.CODE LEFT OUTER JOIN
                         SYS_DOC_TYPE AS SYS_DOC_TYPE_1 ON SYS_DOC_TYPE_1.CODE = INV_SALES_HDR_1.DOC_TYPE LEFT OUTER JOIN EMP_EMPLOYEES ON INV_SALES_HDR_1.SALESMAN_CODE=EMP_EMPLOYEES.EMPID
WHERE         (EMP_EMPLOYEES.Emp_Fname LIKE @SMan) AND (INV_SALES_HDR_1.DOC_TYPE = 'SAL.CDR') AND (INV_SALES_HDR_1.FLAGDEL = 'True')
GROUP BY INV_SALES_HDR_1.DOC_ID, INV_SALES_HDR_1.DOC_DATE_GRE, INV_SALES_DTL_1.ITEM_CODE, INV_SALES_DTL_1.ITEM_DESC_ENG, 
                         INV_ITEM_DIRECTORY_1.TYPE, INV_SALES_DTL_1.ITEM_TAX, INV_ITEM_TYPE_1.DESC_ENG, INV_ITEM_CATEGORY_1.DESC_ENG, INV_ITEM_TM_1.DESC_ENG, 
                         INV_ITEM_GROUP_1.DESC_ENG, INV_SALES_HDR_1.DOC_TYPE, INV_SALES_DTL_1.UOM, INV_SALES_DTL_1.GROSS_TOTAL, INV_ITEM_DIRECTORY_1.[GROUP], 
                         INV_ITEM_DIRECTORY_1.CATEGORY, INV_ITEM_DIRECTORY_1.TRADEMARK, INV_UNIT_1.DESC_ENG, INV_SALES_HDR_1.CUSTOMER_CODE, 
                         SYS_DOC_TYPE_1.DESC_ENG, INV_SALES_HDR_1.DOC_NO, INV_SALES_HDR_1.CUSTOMER_NAME_ENG, INV_SALES_HDR_1.DISCOUNT,EMP_EMPLOYEES.Emp_Fname";
            Dictionary<string, object> Parameter = new Dictionary<string, object>();
            Parameter.Add("@SMan", Saleman);
            DataTable dt = new DataTable();
            dt = DbFunctions.GetDataTable(query, Parameter);
            return dt;
        }


        public DataTable Report_All_byDate()
        {
            query = @"SELECT        INV_SALES_HDR.DOC_ID AS INVOICENO, INV_SALES_HDR.DOC_NO AS Docno, INV_SALES_HDR.DOC_DATE_GRE AS Date, 
                         INV_SALES_DTL.ITEM_CODE AS Itemcode, SUM(INV_SALES_DTL.QUANTITY) * - 1 AS Quantity, SUM(INV_SALES_DTL.GROSS_TOTAL) * - 1 AS GrossTotal, 
                         SUM(INV_SALES_DTL.ITEM_TOTAL) * - 1 AS ItemTotal, SUM(INV_SALES_DTL.ITEM_DISCOUNT) * - 1 AS Discount, INV_SALES_DTL.ITEM_DESC_ENG, 
                         INV_ITEM_DIRECTORY.TYPE, INV_ITEM_TYPE.DESC_ENG AS TypeName, INV_ITEM_CATEGORY.DESC_ENG AS Categoryname, 
                         INV_ITEM_TM.DESC_ENG AS TMname, INV_ITEM_GROUP.DESC_ENG AS Groupname, INV_SALES_HDR.DOC_TYPE, INV_SALES_DTL.UOM, 
                         INV_SALES_DTL.GROSS_TOTAL * - 1 AS GROSS_TOTAL, INV_ITEM_DIRECTORY.[GROUP], INV_ITEM_DIRECTORY.CATEGORY, INV_ITEM_DIRECTORY.TRADEMARK, 
                         INV_UNIT.DESC_ENG AS Unitname, INV_SALES_HDR.CUSTOMER_CODE, SYS_DOC_TYPE.DESC_ENG AS DocumentType, 
                         INV_SALES_HDR.CUSTOMER_NAME_ENG AS Customer, INV_SALES_DTL.ITEM_TAX * - 1 AS TaxTotal, CASE WHEN ROW_NUMBER() OVER(PARTITION BY INV_SALES_HDR.DOC_NO ORDER  BY INV_SALES_DTL.ITEM_DESC_ENG)=1 THEN  INV_SALES_HDR.DISCOUNT*-1  ELSE 0 END AS TotalDiscount,EMP_EMPLOYEES.Emp_Fname As SalesMan
FROM            INV_SALES_HDR LEFT OUTER JOIN
                         INV_SALES_DTL ON INV_SALES_HDR.DOC_NO = INV_SALES_DTL.DOC_NO LEFT OUTER JOIN
                         INV_ITEM_DIRECTORY ON INV_SALES_DTL.ITEM_CODE = INV_ITEM_DIRECTORY.CODE LEFT OUTER JOIN
                         INV_ITEM_TYPE ON INV_ITEM_DIRECTORY.TYPE = INV_ITEM_TYPE.CODE LEFT OUTER JOIN
                         INV_ITEM_CATEGORY ON INV_ITEM_DIRECTORY.CATEGORY = INV_ITEM_CATEGORY.CODE LEFT OUTER JOIN
                         INV_ITEM_TM ON INV_ITEM_TM.CODE = INV_ITEM_DIRECTORY.TRADEMARK LEFT OUTER JOIN
                         INV_UNIT ON INV_SALES_DTL.UOM = INV_UNIT.CODE LEFT OUTER JOIN
                         INV_ITEM_GROUP ON INV_ITEM_DIRECTORY.[GROUP] = INV_ITEM_GROUP.CODE LEFT OUTER JOIN
                         SYS_DOC_TYPE ON SYS_DOC_TYPE.CODE = INV_SALES_HDR.DOC_TYPE LEFT OUTER JOIN EMP_EMPLOYEES ON INV_SALES_HDR.SALESMAN_CODE=EMP_EMPLOYEES.EMPID
WHERE         (EMP_EMPLOYEES.Emp_Fname LIKE @SMan) AND (INV_SALES_HDR.DOC_TYPE = 'SAL.CSR') AND (INV_SALES_HDR.FLAGDEL = 'True') AND (INV_SALES_HDR.DOC_DATE_GRE <= @date2) AND (INV_SALES_HDR.DOC_DATE_GRE >= @date1)
GROUP BY INV_SALES_HDR.DOC_ID, INV_SALES_HDR.DOC_DATE_GRE, INV_SALES_DTL.ITEM_CODE, INV_SALES_DTL.ITEM_DESC_ENG, INV_ITEM_DIRECTORY.TYPE, 
                         INV_SALES_DTL.ITEM_TAX, INV_ITEM_TYPE.DESC_ENG, INV_ITEM_CATEGORY.DESC_ENG, INV_ITEM_TM.DESC_ENG, INV_ITEM_GROUP.DESC_ENG, 
                         INV_SALES_HDR.DOC_TYPE, INV_SALES_DTL.UOM, INV_SALES_DTL.GROSS_TOTAL, INV_ITEM_DIRECTORY.[GROUP], INV_ITEM_DIRECTORY.CATEGORY, 
                         INV_ITEM_DIRECTORY.TRADEMARK, INV_UNIT.DESC_ENG, INV_SALES_HDR.CUSTOMER_CODE, SYS_DOC_TYPE.DESC_ENG, INV_SALES_HDR.DOC_NO, 
                         INV_SALES_HDR.CUSTOMER_NAME_ENG, INV_SALES_HDR.DISCOUNT,EMP_EMPLOYEES.Emp_Fname,INV_SALES_HDR.DOC_DATE_GRE
						 UNION ALL
						 SELECT        INV_SALES_HDR_3.DOC_ID AS INVOICENO, INV_SALES_HDR_3.DOC_NO AS Docno, INV_SALES_HDR_3.DOC_DATE_GRE AS Date, 
                         INV_SALES_DTL_3.ITEM_CODE AS Itemcode, SUM(INV_SALES_DTL_3.QUANTITY) AS Quantity, SUM(INV_SALES_DTL_3.GROSS_TOTAL) AS GrossTotal, 
                         SUM(INV_SALES_DTL_3.ITEM_TOTAL) AS ItemTotal, SUM(INV_SALES_DTL_3.ITEM_DISCOUNT) AS Discount, INV_SALES_DTL_3.ITEM_DESC_ENG, 
                         INV_ITEM_DIRECTORY_3.TYPE, INV_ITEM_TYPE_3.DESC_ENG AS TypeName, INV_ITEM_CATEGORY_3.DESC_ENG AS Categoryname, 
                         INV_ITEM_TM_3.DESC_ENG AS TMname, INV_ITEM_GROUP_3.DESC_ENG AS Groupname, INV_SALES_HDR_3.DOC_TYPE, INV_SALES_DTL_3.UOM, 
                         INV_SALES_DTL_3.GROSS_TOTAL, INV_ITEM_DIRECTORY_3.[GROUP], INV_ITEM_DIRECTORY_3.CATEGORY, INV_ITEM_DIRECTORY_3.TRADEMARK, 
                         INV_UNIT_3.DESC_ENG AS Unitname, INV_SALES_HDR_3.CUSTOMER_CODE, SYS_DOC_TYPE_3.DESC_ENG AS DocumentType, 
                         INV_SALES_HDR_3.CUSTOMER_NAME_ENG AS Customer, INV_SALES_DTL_3.ITEM_TAX AS TaxTotal,CASE WHEN ROW_NUMBER() OVER(PARTITION BY INV_SALES_HDR_3.DOC_NO ORDER  BY INV_SALES_DTL_3.ITEM_DESC_ENG)=1 THEN  INV_SALES_HDR_3.DISCOUNT  ELSE 0 END AS TotalDiscount,EMP_EMPLOYEES.Emp_Fname As SalesMan
FROM            INV_SALES_HDR AS INV_SALES_HDR_3 LEFT OUTER JOIN
                         INV_SALES_DTL AS INV_SALES_DTL_3 ON INV_SALES_HDR_3.DOC_NO = INV_SALES_DTL_3.DOC_NO LEFT OUTER JOIN
                         INV_ITEM_DIRECTORY AS INV_ITEM_DIRECTORY_3 ON INV_SALES_DTL_3.ITEM_CODE = INV_ITEM_DIRECTORY_3.CODE LEFT OUTER JOIN
                         INV_ITEM_TYPE AS INV_ITEM_TYPE_3 ON INV_ITEM_DIRECTORY_3.TYPE = INV_ITEM_TYPE_3.CODE LEFT OUTER JOIN
                         INV_ITEM_CATEGORY AS INV_ITEM_CATEGORY_3 ON INV_ITEM_DIRECTORY_3.CATEGORY = INV_ITEM_CATEGORY_3.CODE LEFT OUTER JOIN
                         INV_ITEM_TM AS INV_ITEM_TM_3 ON INV_ITEM_TM_3.CODE = INV_ITEM_DIRECTORY_3.TRADEMARK LEFT OUTER JOIN
                         INV_UNIT AS INV_UNIT_3 ON INV_SALES_DTL_3.UOM = INV_UNIT_3.CODE LEFT OUTER JOIN
                         INV_ITEM_GROUP AS INV_ITEM_GROUP_3 ON INV_ITEM_DIRECTORY_3.[GROUP] = INV_ITEM_GROUP_3.CODE LEFT OUTER JOIN
                         SYS_DOC_TYPE AS SYS_DOC_TYPE_3 ON SYS_DOC_TYPE_3.CODE = INV_SALES_HDR_3.DOC_TYPE LEFT OUTER JOIN EMP_EMPLOYEES ON INV_SALES_HDR_3.SALESMAN_CODE=EMP_EMPLOYEES.EMPID
WHERE         (EMP_EMPLOYEES.Emp_Fname LIKE @SMan) AND (INV_SALES_HDR_3.DOC_TYPE = 'SAL.CRD') AND (INV_SALES_HDR_3.FLAGDEL = 'True')AND (INV_SALES_HDR_3.DOC_DATE_GRE <= @date2) AND (INV_SALES_HDR_3.DOC_DATE_GRE >= @date1)
GROUP BY INV_SALES_HDR_3.DOC_ID, INV_SALES_HDR_3.DOC_DATE_GRE, INV_SALES_DTL_3.ITEM_CODE, INV_SALES_DTL_3.ITEM_DESC_ENG, 
                         INV_ITEM_DIRECTORY_3.TYPE, INV_SALES_DTL_3.ITEM_TAX, INV_ITEM_TYPE_3.DESC_ENG, INV_ITEM_CATEGORY_3.DESC_ENG, INV_ITEM_TM_3.DESC_ENG, 
                         INV_ITEM_GROUP_3.DESC_ENG, INV_SALES_HDR_3.DOC_TYPE, INV_SALES_DTL_3.UOM, INV_SALES_DTL_3.GROSS_TOTAL, INV_ITEM_DIRECTORY_3.[GROUP], 
                         INV_ITEM_DIRECTORY_3.CATEGORY, INV_ITEM_DIRECTORY_3.TRADEMARK, INV_UNIT_3.DESC_ENG, INV_SALES_HDR_3.CUSTOMER_CODE, 
                         SYS_DOC_TYPE_3.DESC_ENG, INV_SALES_HDR_3.DOC_NO, INV_SALES_HDR_3.CUSTOMER_NAME_ENG, INV_SALES_HDR_3.DISCOUNT,EMP_EMPLOYEES.Emp_Fname,INV_SALES_HDR_3.DOC_DATE_GRE
						 UNION ALL
						 SELECT        INV_SALES_HDR_2.DOC_ID AS INVOICENO, INV_SALES_HDR_2.DOC_NO AS Docno, INV_SALES_HDR_2.DOC_DATE_GRE AS Date, 
                         INV_SALES_DTL_2.ITEM_CODE AS Itemcode, SUM(INV_SALES_DTL_2.QUANTITY) AS Quantity, SUM(INV_SALES_DTL_2.GROSS_TOTAL) AS GrossTotal, 
                         SUM(INV_SALES_DTL_2.ITEM_TOTAL) AS ItemTotal, SUM(INV_SALES_DTL_2.ITEM_DISCOUNT) AS Discount, INV_SALES_DTL_2.ITEM_DESC_ENG, 
                         INV_ITEM_DIRECTORY_2.TYPE, INV_ITEM_TYPE_2.DESC_ENG AS TypeName, INV_ITEM_CATEGORY_2.DESC_ENG AS Categoryname, 
                         INV_ITEM_TM_2.DESC_ENG AS TMname, INV_ITEM_GROUP_2.DESC_ENG AS Groupname, INV_SALES_HDR_2.DOC_TYPE, INV_SALES_DTL_2.UOM, 
                         INV_SALES_DTL_2.GROSS_TOTAL, INV_ITEM_DIRECTORY_2.[GROUP], INV_ITEM_DIRECTORY_2.CATEGORY, INV_ITEM_DIRECTORY_2.TRADEMARK, 
                         INV_UNIT_2.DESC_ENG AS Unitname, INV_SALES_HDR_2.CUSTOMER_CODE, SYS_DOC_TYPE_2.DESC_ENG AS DocumentType, 
                         INV_SALES_HDR_2.CUSTOMER_NAME_ENG AS Customer, INV_SALES_DTL_2.ITEM_TAX AS TaxTotal, CASE WHEN ROW_NUMBER() OVER(PARTITION BY INV_SALES_HDR_2.DOC_NO ORDER  BY INV_SALES_DTL_2.ITEM_DESC_ENG)=1 THEN  INV_SALES_HDR_2.DISCOUNT  ELSE 0 END AS TotalDiscount,EMP_EMPLOYEES.Emp_Fname As SalesMan
FROM            INV_SALES_HDR AS INV_SALES_HDR_2 LEFT OUTER JOIN
                         INV_SALES_DTL AS INV_SALES_DTL_2 ON INV_SALES_HDR_2.DOC_NO = INV_SALES_DTL_2.DOC_NO LEFT OUTER JOIN
                         INV_ITEM_DIRECTORY AS INV_ITEM_DIRECTORY_2 ON INV_SALES_DTL_2.ITEM_CODE = INV_ITEM_DIRECTORY_2.CODE LEFT OUTER JOIN
                         INV_ITEM_TYPE AS INV_ITEM_TYPE_2 ON INV_ITEM_DIRECTORY_2.TYPE = INV_ITEM_TYPE_2.CODE LEFT OUTER JOIN
                         INV_ITEM_CATEGORY AS INV_ITEM_CATEGORY_2 ON INV_ITEM_DIRECTORY_2.CATEGORY = INV_ITEM_CATEGORY_2.CODE LEFT OUTER JOIN
                         INV_ITEM_TM AS INV_ITEM_TM_2 ON INV_ITEM_TM_2.CODE = INV_ITEM_DIRECTORY_2.TRADEMARK LEFT OUTER JOIN
                         INV_UNIT AS INV_UNIT_2 ON INV_SALES_DTL_2.UOM = INV_UNIT_2.CODE LEFT OUTER JOIN
                         INV_ITEM_GROUP AS INV_ITEM_GROUP_2 ON INV_ITEM_DIRECTORY_2.[GROUP] = INV_ITEM_GROUP_2.CODE LEFT OUTER JOIN
                         SYS_DOC_TYPE AS SYS_DOC_TYPE_2 ON SYS_DOC_TYPE_2.CODE = INV_SALES_HDR_2.DOC_TYPE LEFT OUTER JOIN EMP_EMPLOYEES ON INV_SALES_HDR_2.SALESMAN_CODE=EMP_EMPLOYEES.EMPID
WHERE         (EMP_EMPLOYEES.Emp_Fname LIKE @SMan) AND (INV_SALES_HDR_2.DOC_TYPE = 'SAL.CSS') AND (INV_SALES_HDR_2.FLAGDEL = 'True') AND (INV_SALES_HDR_2.DOC_DATE_GRE <= @date2) AND (INV_SALES_HDR_2.DOC_DATE_GRE >= @date1)
GROUP BY INV_SALES_HDR_2.DOC_ID, INV_SALES_HDR_2.DOC_DATE_GRE, INV_SALES_DTL_2.ITEM_CODE, INV_SALES_DTL_2.ITEM_DESC_ENG, 
                         INV_ITEM_DIRECTORY_2.TYPE, INV_SALES_DTL_2.ITEM_TAX, INV_ITEM_TYPE_2.DESC_ENG, INV_ITEM_CATEGORY_2.DESC_ENG, INV_ITEM_TM_2.DESC_ENG, 
                         INV_ITEM_GROUP_2.DESC_ENG, INV_SALES_HDR_2.DOC_TYPE, INV_SALES_DTL_2.UOM, INV_SALES_DTL_2.GROSS_TOTAL, INV_ITEM_DIRECTORY_2.[GROUP], 
                         INV_ITEM_DIRECTORY_2.CATEGORY, INV_ITEM_DIRECTORY_2.TRADEMARK, INV_UNIT_2.DESC_ENG, INV_SALES_HDR_2.CUSTOMER_CODE, 
                         SYS_DOC_TYPE_2.DESC_ENG, INV_SALES_HDR_2.DOC_NO, INV_SALES_HDR_2.CUSTOMER_NAME_ENG, INV_SALES_HDR_2.DISCOUNT,EMP_EMPLOYEES.Emp_Fname,INV_SALES_HDR_2.DOC_DATE_GRE
						 UNION ALL
						 SELECT        INV_SALES_HDR_1.DOC_ID AS INVOICENO, INV_SALES_HDR_1.DOC_NO AS Docno, INV_SALES_HDR_1.DOC_DATE_GRE AS Date, 
                         INV_SALES_DTL_1.ITEM_CODE AS Itemcode, SUM(INV_SALES_DTL_1.QUANTITY) * - 1 AS Quantity, SUM(INV_SALES_DTL_1.GROSS_TOTAL) * - 1 AS GrossTotal, 
                         SUM(INV_SALES_DTL_1.ITEM_TOTAL) * - 1 AS ItemTotal, SUM(INV_SALES_DTL_1.ITEM_DISCOUNT) * - 1 AS Discount, INV_SALES_DTL_1.ITEM_DESC_ENG, 
                         INV_ITEM_DIRECTORY_1.TYPE, INV_ITEM_TYPE_1.DESC_ENG AS TypeName, INV_ITEM_CATEGORY_1.DESC_ENG AS Categoryname, 
                         INV_ITEM_TM_1.DESC_ENG AS TMname, INV_ITEM_GROUP_1.DESC_ENG AS Groupname, INV_SALES_HDR_1.DOC_TYPE, INV_SALES_DTL_1.UOM, 
                         INV_SALES_DTL_1.GROSS_TOTAL * - 1 AS GROSS_TOTAL, INV_ITEM_DIRECTORY_1.[GROUP], INV_ITEM_DIRECTORY_1.CATEGORY, 
                         INV_ITEM_DIRECTORY_1.TRADEMARK, INV_UNIT_1.DESC_ENG AS Unitname, INV_SALES_HDR_1.CUSTOMER_CODE, 
                         SYS_DOC_TYPE_1.DESC_ENG AS DocumentType, INV_SALES_HDR_1.CUSTOMER_NAME_ENG AS Customer, INV_SALES_DTL_1.ITEM_TAX * - 1 AS TaxTotal, 
                         CASE WHEN ROW_NUMBER() OVER(PARTITION BY INV_SALES_HDR_1.DOC_NO ORDER  BY INV_SALES_DTL_1.ITEM_DESC_ENG)=1 THEN  INV_SALES_HDR_1.DISCOUNT  ELSE 0 END AS TotalDiscount,EMP_EMPLOYEES.Emp_Fname As SalesMan
FROM            INV_SALES_HDR AS INV_SALES_HDR_1 LEFT OUTER JOIN
                         INV_SALES_DTL AS INV_SALES_DTL_1 ON INV_SALES_HDR_1.DOC_NO = INV_SALES_DTL_1.DOC_NO LEFT OUTER JOIN
                         INV_ITEM_DIRECTORY AS INV_ITEM_DIRECTORY_1 ON INV_SALES_DTL_1.ITEM_CODE = INV_ITEM_DIRECTORY_1.CODE LEFT OUTER JOIN
                         INV_ITEM_TYPE AS INV_ITEM_TYPE_1 ON INV_ITEM_DIRECTORY_1.TYPE = INV_ITEM_TYPE_1.CODE LEFT OUTER JOIN
                         INV_ITEM_CATEGORY AS INV_ITEM_CATEGORY_1 ON INV_ITEM_DIRECTORY_1.CATEGORY = INV_ITEM_CATEGORY_1.CODE LEFT OUTER JOIN
                         INV_ITEM_TM AS INV_ITEM_TM_1 ON INV_ITEM_TM_1.CODE = INV_ITEM_DIRECTORY_1.TRADEMARK LEFT OUTER JOIN
                         INV_UNIT AS INV_UNIT_1 ON INV_SALES_DTL_1.UOM = INV_UNIT_1.CODE LEFT OUTER JOIN
                         INV_ITEM_GROUP AS INV_ITEM_GROUP_1 ON INV_ITEM_DIRECTORY_1.[GROUP] = INV_ITEM_GROUP_1.CODE LEFT OUTER JOIN
                         SYS_DOC_TYPE AS SYS_DOC_TYPE_1 ON SYS_DOC_TYPE_1.CODE = INV_SALES_HDR_1.DOC_TYPE LEFT OUTER JOIN EMP_EMPLOYEES ON INV_SALES_HDR_1.SALESMAN_CODE=EMP_EMPLOYEES.EMPID
WHERE         (EMP_EMPLOYEES.Emp_Fname LIKE @SMan) AND (INV_SALES_HDR_1.DOC_TYPE = 'SAL.CDR') AND (INV_SALES_HDR_1.FLAGDEL = 'True') AND (INV_SALES_HDR_1.DOC_DATE_GRE >=@date1 AND INV_SALES_HDR_1.DOC_DATE_GRE<= @date2)
GROUP BY INV_SALES_HDR_1.DOC_ID, INV_SALES_HDR_1.DOC_DATE_GRE, INV_SALES_DTL_1.ITEM_CODE, INV_SALES_DTL_1.ITEM_DESC_ENG, 
                         INV_ITEM_DIRECTORY_1.TYPE, INV_SALES_DTL_1.ITEM_TAX, INV_ITEM_TYPE_1.DESC_ENG, INV_ITEM_CATEGORY_1.DESC_ENG, INV_ITEM_TM_1.DESC_ENG, 
                         INV_ITEM_GROUP_1.DESC_ENG, INV_SALES_HDR_1.DOC_TYPE, INV_SALES_DTL_1.UOM, INV_SALES_DTL_1.GROSS_TOTAL, INV_ITEM_DIRECTORY_1.[GROUP], 
                         INV_ITEM_DIRECTORY_1.CATEGORY, INV_ITEM_DIRECTORY_1.TRADEMARK, INV_UNIT_1.DESC_ENG, INV_SALES_HDR_1.CUSTOMER_CODE, 
                         SYS_DOC_TYPE_1.DESC_ENG, INV_SALES_HDR_1.DOC_NO, INV_SALES_HDR_1.CUSTOMER_NAME_ENG, INV_SALES_HDR_1.DISCOUNT,EMP_EMPLOYEES.Emp_Fname,INV_SALES_HDR_1.DOC_DATE_GRE";
            Dictionary<string, object> Parameter = new Dictionary<string, object>();
            Parameter.Add("@SMan", Saleman);
            Parameter.Add("@date1", Date1);
            Parameter.Add("@date2", Date2);
            DataTable dt = new DataTable();
            dt = DbFunctions.GetDataTable(query, Parameter);
            return dt;            
        }


        public DataTable salesman_Details()
        {
            query = @"SELECT Empid,Emp_Fname FROM EMP_EMPLOYEES WHERE Emp_Desig='21'";
            DataTable dt = new DataTable();
            dt=DbFunctions.GetDataTable(query);
            return dt;
        }

        public DataTable purchaseTax()
        {
            query = @"SELECT        TAX.DOC_ID AS 'INVOICE NO', TAX.DOC_NO, INV_PURCHASE_HDR_1.DOC_DATE_GRE AS DATE,CASE WHEN INV_PURCHASE_HDR_1.DOC_TYPE = 'LGR.PRT' THEN 'PURCHASE RETURN' ELSE CASE WHEN INV_PURCHASE_HDR_1.DOC_TYPE = 'PUR.CSS' THEN 'CASH PURCHASE' ELSE 'CREDIT PURCHASE' END END AS 'VOUCHER TYPE',CASE WHEN INV_PURCHASE_HDR_1.PUR_TYPE = 'EST' THEN 'ESTIMATE' ELSE 'GST PURCHASE' END AS 'PURCHASE TYPE', TAX.CODE AS SUPP_CODE, 
                         ISNULL(PAY_SUPPLIER_1.DESC_ENG,'') AS 'SUPPLYER NAME', (ISNULL(PAY_SUPPLIER_1.ADDRESS_A,'') + ' ' + ISNULL(PAY_SUPPLIER_1.ADDRESS_B,'')+' '+ISNULL(PAY_SUPPLIER_1.POBOX,'')+' '+ISNULL(PAY_SUPPLIER_1.REG_CODE,'')+' '+ISNULL(PAY_SUPPLIER_1.MOBILE,'')) AS ADDRESS, PAY_SUPPLIER_1.TIN_NO AS 'GST/UIN NO', ISNULL(PAY_SUPPLIER_1.STATE,'KL') AS STATE, 
                         INV_PURCHASE_HDR_1.SUP_INV_NO AS 'SUPPLYER INV.NO', CONVERT(DECIMAL(18,2),TAX.ITEM_TAX_PER) AS 'ITEM TAX', 
                         CASE WHEN ISNULL(PAY_SUPPLIER_1.STATE,'KL') = 'KL' THEN 0 ELSE CONVERT(DECIMAL(18, 2), SUM(TAX.ITEM_TAX)) END AS 'IGST', 
                         CASE WHEN ISNULL(PAY_SUPPLIER_1.STATE,'KL') = 'KL' THEN CONVERT(DECIMAL(18, 2), SUM(TAX.ITEM_TAX) / 2) ELSE 0 END AS 'CGST', 
                         CASE WHEN ISNULL(PAY_SUPPLIER_1.STATE,'KL') = 'KL' THEN CONVERT(DECIMAL(18, 2), SUM(TAX.ITEM_TAX) / 2) ELSE 0 END AS 'SGST', CONVERT(DECIMAL(18,2),SUM(TAX.ITEM_TAX)) 
                         AS 'TOTAL TAX', CONVERT(DECIMAL(18,2),SUM(TAX.ITEM_GROSS)) AS 'TOTAL GROSS'
						 
FROM            PAY_SUPPLIER AS PAY_SUPPLIER_1 RIGHT OUTER JOIN
                         INV_PURCHASE_HDR AS INV_PURCHASE_HDR_1 ON PAY_SUPPLIER_1.CODE = INV_PURCHASE_HDR_1.SUPPLIER_CODE RIGHT OUTER JOIN
                             (SELECT        INV_PURCHASE_HDR.DOC_NO, INV_PURCHASE_HDR.DOC_ID, PAY_SUPPLIER.CODE, INV_PURCHASE_DTL.ITEM_TAX_PER, 
                                                         INV_PURCHASE_DTL.ITEM_TAX, INV_PURCHASE_DTL.ITEM_GROSS
                               FROM            INV_PURCHASE_HDR LEFT OUTER JOIN
                                                         PAY_SUPPLIER ON INV_PURCHASE_HDR.SUPPLIER_CODE = PAY_SUPPLIER.CODE LEFT OUTER JOIN
                                                         INV_PURCHASE_DTL ON INV_PURCHASE_HDR.DOC_ID = INV_PURCHASE_DTL.DOC_ID) AS TAX ON 
                         INV_PURCHASE_HDR_1.DOC_NO = TAX.DOC_NO WHERE FLAGDEL=1
GROUP BY TAX.DOC_ID, TAX.ITEM_TAX_PER, TAX.DOC_NO, TAX.CODE, PAY_SUPPLIER_1.CODE, PAY_SUPPLIER_1.DESC_ENG, PAY_SUPPLIER_1.TIN_NO, 
                         PAY_SUPPLIER_1.STATE, INV_PURCHASE_HDR_1.SUP_INV_NO, INV_PURCHASE_HDR_1.DOC_DATE_GRE, INV_PURCHASE_HDR_1.DOC_TYPE,INV_PURCHASE_HDR_1.PUR_TYPE, PAY_SUPPLIER_1.ADDRESS_A, PAY_SUPPLIER_1.ADDRESS_B, PAY_SUPPLIER_1.POBOX, PAY_SUPPLIER_1.REG_CODE, 
                         PAY_SUPPLIER_1.MOBILE";
            DataTable dt = new DataTable();
            return DbFunctions.GetDataTable(query);
            
        }

        public DataTable purchaseTax_date()
        {
            query = @"SELECT        TAX.DOC_ID AS 'INVOICE NO', TAX.DOC_NO, INV_PURCHASE_HDR_1.DOC_DATE_GRE AS DATE,CASE WHEN INV_PURCHASE_HDR_1.DOC_TYPE = 'LGR.PRT' THEN 'PURCHASE RETURN' ELSE CASE WHEN INV_PURCHASE_HDR_1.DOC_TYPE = 'PUR.CSS' THEN 'CASH PURCHASE' ELSE 'CREDIT PURCHASE' END END AS 'VOUCHER TYPE',CASE WHEN INV_PURCHASE_HDR_1.PUR_TYPE = 'EST' THEN 'ESTIMATE' ELSE 'GST PURCHASE' END AS 'PURCHASE TYPE', TAX.CODE AS SUPP_CODE, 
                         ISNULL(PAY_SUPPLIER_1.DESC_ENG,'') AS 'SUPPLYER NAME', (ISNULL(PAY_SUPPLIER_1.ADDRESS_A,'') + ' ' + ISNULL(PAY_SUPPLIER_1.ADDRESS_B,'')+' '+ISNULL(PAY_SUPPLIER_1.POBOX,'')+' '+ISNULL(PAY_SUPPLIER_1.REG_CODE,'')+' '+ISNULL(PAY_SUPPLIER_1.MOBILE,'')) AS ADDRESS, PAY_SUPPLIER_1.TIN_NO AS 'GST/UIN NO', ISNULL(PAY_SUPPLIER_1.STATE,'KL') AS STATE, 
                         INV_PURCHASE_HDR_1.SUP_INV_NO AS 'SUPPLYER INV.NO', CONVERT(DECIMAL(18,2),TAX.ITEM_TAX_PER) AS 'ITEM TAX', 
                         CASE WHEN ISNULL(PAY_SUPPLIER_1.STATE,'KL') = 'KL' THEN 0 ELSE CONVERT(DECIMAL(18, 2), SUM(TAX.ITEM_TAX)) END AS 'IGST', 
                         CASE WHEN ISNULL(PAY_SUPPLIER_1.STATE,'KL') = 'KL' THEN CONVERT(DECIMAL(18, 2), SUM(TAX.ITEM_TAX) / 2) ELSE 0 END AS 'CGST', 
                         CASE WHEN ISNULL(PAY_SUPPLIER_1.STATE,'KL') = 'KL' THEN CONVERT(DECIMAL(18, 2), SUM(TAX.ITEM_TAX) / 2) ELSE 0 END AS 'SGST', CONVERT(DECIMAL(18,2),SUM(TAX.ITEM_TAX)) 
                         AS 'TOTAL TAX', CONVERT(DECIMAL(18,2),SUM(TAX.ITEM_GROSS)) AS 'TOTAL GROSS'
						 
FROM            PAY_SUPPLIER AS PAY_SUPPLIER_1 RIGHT OUTER JOIN
                         INV_PURCHASE_HDR AS INV_PURCHASE_HDR_1 ON PAY_SUPPLIER_1.CODE = INV_PURCHASE_HDR_1.SUPPLIER_CODE RIGHT OUTER JOIN
                             (SELECT        INV_PURCHASE_HDR.DOC_NO, INV_PURCHASE_HDR.DOC_ID, PAY_SUPPLIER.CODE, INV_PURCHASE_DTL.ITEM_TAX_PER, 
                                                         INV_PURCHASE_DTL.ITEM_TAX, INV_PURCHASE_DTL.ITEM_GROSS
                               FROM            INV_PURCHASE_HDR LEFT OUTER JOIN
                                                         PAY_SUPPLIER ON INV_PURCHASE_HDR.SUPPLIER_CODE = PAY_SUPPLIER.CODE LEFT OUTER JOIN
                                                         INV_PURCHASE_DTL ON INV_PURCHASE_HDR.DOC_ID = INV_PURCHASE_DTL.DOC_ID) AS TAX ON 
                         INV_PURCHASE_HDR_1.DOC_NO = TAX.DOC_NO WHERE FLAGDEL=1 AND INV_PURCHASE_HDR_1.DOC_DATE_GRE BETWEEN @d1 AND @d2
GROUP BY TAX.DOC_ID, TAX.ITEM_TAX_PER, TAX.DOC_NO, TAX.CODE, PAY_SUPPLIER_1.CODE, PAY_SUPPLIER_1.DESC_ENG, PAY_SUPPLIER_1.TIN_NO, 
                         PAY_SUPPLIER_1.STATE, INV_PURCHASE_HDR_1.SUP_INV_NO, INV_PURCHASE_HDR_1.DOC_DATE_GRE, INV_PURCHASE_HDR_1.DOC_TYPE,INV_PURCHASE_HDR_1.PUR_TYPE, PAY_SUPPLIER_1.ADDRESS_A, PAY_SUPPLIER_1.ADDRESS_B, PAY_SUPPLIER_1.POBOX, PAY_SUPPLIER_1.REG_CODE, 
                         PAY_SUPPLIER_1.MOBILE";
            Dictionary<string, object> Parameter = new Dictionary<string, object>();
            Parameter.Add("@d1", Date1);
            Parameter.Add("@d2", Date2);
            DataTable dt = new DataTable();
            dt = DbFunctions.GetDataTable(query, Parameter);
            return dt;
        }

        public String Current_State()
        {
            query = @"SELECT CurrentState FROM SYS_SETUP";
            DataTable dt = new DataTable();
            dt = DbFunctions.GetDataTable(query);
            if (dt.Rows.Count >= 1)
                return dt.Rows[0][0].ToString();
            else
                return "ER";
        }
    }
}
