using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Data.SqlClient;
namespace Sys_Sols_Inventory.reports
{
    public partial class stkreport : Form
    {
        public stkreport()
        {
            InitializeComponent();
        }
        //private SqlConnection conn = new SqlConnection(Properties.Settings.Default.ConnectionStrings);
     
        private void stkreport_Load(object sender, EventArgs e)
        {
            //SqlCommand cmd = new SqlCommand("SELECT INV_ITEM_DIRECTORY.CODE,INV_ITEM_DIRECTORY.DESC_ENG,INV_ITEM_DIRECTORY.[TYPE],ISNULL(PUR.PUR_STOCK,0) AS PURCHASE_QTY,ISNULL(RAW_STOCK,0) AS RAWMATERIALS_PRODUCTS,ISNULL(FIN_STOCK,0) AS FINISHED_PRODUCTS,ISNULL(SALE_STOCK,0) AS SALES_QTY,CASE WHEN INV_ITEM_DIRECTORY.[TYPE]='RMT' THEN ISNULL(PUR.PUR_STOCK,0)-ISNULL(RAW_STOCK,0) WHEN INV_ITEM_DIRECTORY.[TYPE]='FIN' THEN ISNULL(FIN_STOCK,0)-ISNULL(SALE_STOCK,0) ELSE 0 END AS STOCK  FROM INV_ITEM_DIRECTORY LEFT OUTER JOIN (SELECT ITEM_CODE,ISNULL(SUM(QTY_RCVD),0) AS PUR_STOCK FROM INV_PURCHASE_DTL WHERE DOC_TYPE='PUR.CRD' GROUP BY ITEM_CODE) AS PUR ON PUR.ITEM_CODE=INV_ITEM_DIRECTORY.CODE LEFT OUTER JOIN (SELECT ITEM_CODE,ISNULL(SUM(QUANTITY),0) AS SALE_STOCK FROM INV_SALES_DTL WHERE DOC_TYPE='SAL.CRD' GROUP BY ITEM_CODE) AS SALES ON SALES.ITEM_CODE=INV_ITEM_DIRECTORY.CODE LEFT OUTER JOIN (SELECT ITEMCODE,ISNULL(SUM(QTY),0) AS FIN_STOCK FROM ProductionProducts GROUP BY ITEMCODE) AS FIN_PRODUCT ON FIN_PRODUCT.ITEMCODE=INV_ITEM_DIRECTORY.CODE LEFT OUTER JOIN (SELECT ITEMCODE,ISNULL(SUM(QTY),0) AS RAW_STOCK FROM ProductionRawMaterials GROUP BY ITEMCODE) AS RAW_PRODUCT ON RAW_PRODUCT.ITEMCODE=INV_ITEM_DIRECTORY.CODE",conn);
            string cmd = "SELECT INV_ITEM_DIRECTORY.CODE,INV_ITEM_DIRECTORY.DESC_ENG,INV_ITEM_DIRECTORY.[TYPE],ISNULL(PUR.PUR_STOCK,0) AS PURCHASE_QTY,ISNULL(RAW_STOCK,0) AS RAWMATERIALS_PRODUCTS,ISNULL(FIN_STOCK,0) AS FINISHED_PRODUCTS,ISNULL(SALE_STOCK,0) AS SALES_QTY,CASE WHEN INV_ITEM_DIRECTORY.[TYPE]='RMT' THEN ISNULL(PUR.PUR_STOCK,0)-ISNULL(RAW_STOCK,0) WHEN INV_ITEM_DIRECTORY.[TYPE]='FIN' THEN ISNULL(FIN_STOCK,0)-ISNULL(SALE_STOCK,0) ELSE 0 END AS STOCK  FROM INV_ITEM_DIRECTORY LEFT OUTER JOIN (SELECT ITEM_CODE,ISNULL(SUM(QTY_RCVD),0) AS PUR_STOCK FROM INV_PURCHASE_DTL WHERE DOC_TYPE='PUR.CRD' GROUP BY ITEM_CODE) AS PUR ON PUR.ITEM_CODE=INV_ITEM_DIRECTORY.CODE LEFT OUTER JOIN (SELECT ITEM_CODE,ISNULL(SUM(QUANTITY),0) AS SALE_STOCK FROM INV_SALES_DTL WHERE DOC_TYPE='SAL.CRD' GROUP BY ITEM_CODE) AS SALES ON SALES.ITEM_CODE=INV_ITEM_DIRECTORY.CODE LEFT OUTER JOIN (SELECT ITEMCODE,ISNULL(SUM(QTY),0) AS FIN_STOCK FROM ProductionProducts GROUP BY ITEMCODE) AS FIN_PRODUCT ON FIN_PRODUCT.ITEMCODE=INV_ITEM_DIRECTORY.CODE LEFT OUTER JOIN (SELECT ITEMCODE,ISNULL(SUM(QTY),0) AS RAW_STOCK FROM ProductionRawMaterials GROUP BY ITEMCODE) AS RAW_PRODUCT ON RAW_PRODUCT.ITEMCODE=INV_ITEM_DIRECTORY.CODE";
            //conn.Open();
            //SqlDataAdapter ad = new SqlDataAdapter(cmd);
            DataTable dt = new DataTable();
            //ad.Fill(dt);
            dt = Model.DbFunctions.GetDataTable(cmd);
            dataGridView1.DataSource = dt;
            //conn.Close();
        }
    }
}
